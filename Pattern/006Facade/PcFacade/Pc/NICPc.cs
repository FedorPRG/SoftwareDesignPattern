using static System.Console;
using System.Threading;

namespace PcFacade.Pc
{
    /// <summary>
    /// По первой ссылке гугла https://sysadminz.ru/index.php?topic=39.0
    /// </summary>
    class NICPc
    {
        
        public void C0()
            => WriteLine("осуществляется программирование регистров микросхемы Host Bridge");
        public void C1()
            => WriteLine("с помощью последовательных циклов запись/чтение определяется тип памяти, суммарный объем и размещение по строкам. И в соответствии с полученной информацией настраивается DRAM-контроллер. На этом же этапе процессор должен быть переключен в Protected Mode (защищенный режим)");
        public void C3()
            => WriteLine("проверяются первые 256 Кб памяти, которые в дальнейшем будут использованы как транзитный буфер, а также осуществляется распаковка и копирование System BIOS в DRAM.");
        public void C6()
            => WriteLine("по специальному алгоритму определяется наличие, тип и параметры External Cache.");
        public void CF()
            => WriteLine("определяется тип процессора, а результат помещается в CMOS. Если по каким-либо причинам определение типа процессора закончилось неудачно, такая ошибка становится фатальной, и система, а соответственно и выполнение POST, останавливается.");
        public void Step05()
            => WriteLine("осуществляется проверка и инициализация контроллера клавиатуры, однако на данный момент прием кодов нажатых клавиш еще не возможен.");
        public void Step07()
            => WriteLine("проверяется функционирование CMOS и напряжение питания ее батареи. Если фиксируется ошибка питания, выполнение POST не останавливается, однако BIOS запоминает этот факт. Ошибка при контрольной записи/чтении CMOS считается фатальной, и POST останавливается на коде О7.");
        public void StepBE()
            => WriteLine("программируются конфигурационные регистры Host Bridge и PIIX значениями, взятыми из BIOS.");
        public void Step0A()
            => WriteLine("генерируется таблица векторов прерываний, а также производится первичная настройка подсистемы управления питанием.");
        public void Step0B()
            => WriteLine("проверяется контрольная сумма блока ячеек CMOS, а также, если BIOS поддерживает PnP, выполняется сканирование устройств ISA PnP и инициализация их параметров. Для PCI-устройств устанавливаются основные (стандартные) поля в блоке конфигурационных регистров.");
        public void Step0C()
            => WriteLine("инициализируется блок переменных BIOS.");
        public void Step0D0E()
            => WriteLine("определяется наличие видеоадаптера путем проверки наличия сигнатуры 55АА по адресу начала Video BIOS (C0000:0000h). Если Video BIOS обнаружен и его контрольная сумма правильная, включается процедура инициализации видеоадаптера. С этого момента появляется изображение на экране монитора, высвечивается заставка видеоадаптера, инициализируется клавиатура. Далее по ходу POST тестируется контроллер DMA и контроллер прерываний.");
        public void Step3031()
            => WriteLine("пределяется объем Base Memory и External Memory, и с этого момента начинается отображаемый на экране тест оперативной памяти.");
        public void Step3D()
            => WriteLine("инициализируется PS/2 mouse.");
        public void Step41()
            => WriteLine("производится инициализация подсистемы гибких дисков.");
        public void Step45()
            => WriteLine("инициализируется сопроцессор FPU.");
        public void StepF()
            => WriteLine("Приветствие");
    }
}
